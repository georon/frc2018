// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4252.FRC2018.commands;

//import edu.wpi.first.wpilibj.RobotDrive.MotorType;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4252.FRC2018.Robot;
import org.usfirst.frc4252.FRC2018.RobotMap;
import org.usfirst.frc4252.FRC2018.OI;

/**
 *
 */
public class ReverseMotor1Command extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ReverseMotor1Command() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        //m_xAxis = xAxis;
        //m_yAxis = yAxis;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
      

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	//Robot.driveTrain.robotDrive.setInvertedMotor(MotorType.kFrontRight, true);
    	//Robot.driveTrain.robotDrive.setInvertedMotor(MotorType.kRearRight, true);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	
    	
    	//m_xAxis = Robot.oi.getJoystick1().getRawAxis(0);
    	//m_yAxis = Robot.oi.getJoystick1().getRawAxis(1);
    	RobotMap.rollerSpeedController.set(-0.5);  //setManual(0.6);
    	//Robot.driveTrain.robotDrive.arcadeDrive(m_xAxis, m_yAxis);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
